{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","App.module.css","hooks/useLocalStorage.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","connect","onSubmit","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","evt","currentTarget","value","reset","preventDefault","className","s","form","label","htmlFor","input","type","id","pattern","title","required","onChange","button","Filter","inputId","labeltId","ContactList","contacts","onDeleteContact","list","map","item","onClick","App","setContacts","filter","setFilter","visibleContacts","lowerCasedFilter","toLocaleLowerCase","contact","includes","getVisibleContacts","context","foundNames","lowerName","alert","contactId","prevContacts","initialState","contactName","contactNumber","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50528968.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2qyBI\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"context\":\"App_context__10UXM\"};","import {useState, useEffect} from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n    const [state, setState] = useState(() => (\n      JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\n    ));\n  \n    useEffect(() => {\n      window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state])\n  \n    return [state, setState];\n}\n\nexport default useLocalStorage;","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm ({ onSubmit }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    const handleChange = (evt) => {\n        const { value, name } = evt.currentTarget;\n        if(name === 'name') {\n            setName(value);\n        } if (name === 'number') {\n            setNumber(value)\n        }\n    };\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onSubmit(name, number);\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n            <label className={s.label} htmlFor={nameInputId}>Name</label>\n            <input\n                className={s.input}\n                value={name}\n                type=\"text\"\n                name=\"name\"\n                id={nameInputId}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={handleChange}\n            />\n\n            <label className={s.label} htmlFor={numberInputId}>Number</label>\n            <input\n                className={s.input} \n                value={number}\n                type=\"tel\"\n                name=\"number\"\n                id={numberInputId}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={handleChange}\n            />\n                \n            <button\n            className={s.button}\n                 type=\"submit\"\n            >\n                Add contact\n            </button>\n        </form>\n    );\n};\n\nexport default connect()(ContactForm);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nconst Filter = ({value, onChange}) => {\n    const inputId = shortid.generate();\n    const labeltId = shortid.generate();\n    return (\n    <>\n        <div className={s.form}>\n            <label htmlFor={labeltId} className={s.label}> Find contacts by name</label>\n            <input className={s.input} id={inputId} type=\"text\" value={value} onChange={onChange}/>\n        </div>\n    </>\n    )\n}    \n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({contacts, onDeleteContact}) => (\n    <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n            <li key={id} className={s.item}>\n                <span>{name}:</span>\n                <span>{number}</span>\n                <button type=\"button\" onClick={() => onDeleteContact(id)}>Delete</button>\n            </li>\n        ))}\n    </ul>\n);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import React, {useState} from 'react';\nimport shortid from 'shortid';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport s from './App.module.css';\n\n\nfunction App () {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const changeFilter = (evt) => {\n    setFilter(evt.currentTarget.value);\n  };\n\n  const addContact = (name, number) => {\n    const foundNames = contacts.map(contact => contact.name.toLocaleLowerCase());\n    const lowerName = name.toLocaleLowerCase();\n    if(foundNames.includes(lowerName)){\n     return alert(`${name} is already in contacts`);\n    }\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n  \n      setContacts((contacts) => ([contact, ...contacts]));\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(prevContacts => (\n      prevContacts.filter(contact => contact.id !== contactId)\n    ));\n  };\n\n  const getVisibleContacts = () => {\n    const lowerCasedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact => contact.name.toLocaleLowerCase().includes(lowerCasedFilter))\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div className={s.context}>\n      <h1 className=\"text\">Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2 className=\"text\">Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  )\n}\n\nexport default App;\n","import { createStore } from 'redux';\n\nconst initialState = {contactName: '', contactNumber: ''};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'contactForm/Change':\n            return {contactName: action.value};\n\n        default:\n            return state;\n    };\n};\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}